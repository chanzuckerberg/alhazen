"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.emojisplosion = exports.defaultTagName = exports.defaultPosition = exports.defaultPhysics = exports.defaultEmojiCount = exports.defaultCreateContainer = exports.defaultClassName = void 0;
const actor_1 = require("./actor");
const animator_1 = require("./animator");
const emojis_1 = require("./emojis");
const styles_1 = require("./styles");
const utils_1 = require("./utils");
/**
 * Default class name to add to emoji elements.
 */
exports.defaultClassName = "emoji-styles";
/**
 * Default creator for a container element.
 *
 * @returns <div /> element prepended to document.body.
 */
exports.defaultCreateContainer = (() => {
    let container;
    return () => {
        if ((container === null || container === void 0 ? void 0 : container.parentNode) === document.body) {
            return container;
        }
        container = document.createElement("div");
        document.body.prepend(container);
        return container;
    };
})();
/**
 * Default emojiCount to choose a random number of emoji per blast.
 *
 * @returns Random integer within 14 to 28.
 */
exports.defaultEmojiCount = () => Math.floor(Math.random() * 14) + 14;
/**
 * Default runtime change constants for actor movements.
 */
exports.defaultPhysics = {
    fontSize: {
        max: 28,
        min: 14,
    },
    framerate: 60,
    gravity: 0.35,
    initialVelocities: {
        rotation: {
            max: 7,
            min: -7,
        },
        x: {
            max: 7,
            min: -7,
        },
        y: {
            max: -7,
            min: -21,
        },
    },
    preserveOutOfBounds: false,
    rotation: {
        max: 45,
        min: -45,
    },
    rotationDeceleration: 0.98,
};
/**
 * Default position to choose random locations within the page.
 *
 * @returns Random { left, top } integers within the page.
 */
exports.defaultPosition = () => ({
    x: Math.random() * innerWidth,
    y: Math.random() * innerHeight,
});
/**
 * Default emoji processor, which does nothing.
 */
const defaultProcess = () => { };
/**
 * Default HTML tag name to create elements as.
 */
exports.defaultTagName = "span";
/**
 * Launches an emojisplosion across the page! ðŸŽ†
 *
 * @param settings   Settings to emojisplode.
 */
exports.emojisplosion = (settings = {}) => {
    const { animator = new animator_1.Animator().start(), className = exports.defaultClassName, container = exports.defaultCreateContainer, emojiCount = exports.defaultEmojiCount, emojis = emojis_1.defaultEmojis, position = exports.defaultPosition, process = defaultProcess, tagName = exports.defaultTagName, uniqueness = Infinity, } = settings;
    styles_1.createStyleElementAndClass(className);
    const physics = Object.assign(Object.assign(Object.assign({}, exports.defaultPhysics), settings.physics), { initialVelocities: Object.assign(Object.assign({}, exports.defaultPhysics.initialVelocities), (settings.physics !== undefined ? settings.physics.initialVelocities : {})) });
    const emojiSettings = {
        className,
        container: utils_1.obtainValue(container),
        // Copy the input array to prevent modifications.
        emojis: utils_1.shuffleArray(utils_1.obtainValue(emojis))
            .slice(0, utils_1.obtainValue(uniqueness)),
        physics,
        position: utils_1.obtainValue(position),
        process,
        tagName: utils_1.obtainValue(tagName),
    };
    const blastEmojiCount = utils_1.obtainValue(emojiCount);
    for (let i = 0; i < blastEmojiCount; i += 1) {
        animator.add(new actor_1.EmojiActor(emojiSettings));
    }
    return animator;
};
